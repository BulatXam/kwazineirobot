from typing import List

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from src.callbacks import ActionCallback, ActionDataCallback


def _is_valid_text_for_convert_buttons(text: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–∫—Å—Ç —Ñ–æ—Ä–º–∞—Ç—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫.
    –§–æ—Ä–º–∞—Ç: —Ç–µ–∫—Å—Ç-—Å—Å—ã–ª–∫–∞ –∏–ª–∏ —Ç–µ–∫—Å—Ç-—Å—Å—ã–ª–∫–∞|—Ç–µ–∫—Å—Ç-—Å—Å—ã–ª–∫–∞...
    
    Args:
        text (str): –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        
    Returns:
        bool: True –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –≤–∞–ª–∏–¥–µ–Ω, False –µ—Å–ª–∏ –Ω–µ—Ç
    """
    lines = text.split('\n')
    for line in lines:
        buttons = line.split('|')
        for button in buttons:
            parts = button.strip().split('-')
            if len(parts) != 2:
                return False
            if not parts[0].strip() or not parts[1].strip():
                return False
    return True


async def build_inline_buttons_by_text(
    buttons_text: str
) -> List[InlineKeyboardButton]:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏.
    
    Args:
        button_text (str): –¢–µ–∫—Å—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ "—Ç–µ–∫—Å—Ç-—Å—Å—ã–ª–∫–∞" –∏–ª–∏ "—Ç–µ–∫—Å—Ç-—Å—Å—ã–ª–∫–∞|—Ç–µ–∫—Å—Ç-—Å—Å—ã–ª–∫–∞..."
        
    Returns:
        InlineKeyboardMarkup: –ì–æ—Ç–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        
    Raises:
        ValueError: –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É
    """
    if not _is_valid_text_for_convert_buttons(buttons_text):
        raise ValueError("Invalid button text format")
    
    keyboard = []
    lines = buttons_text.split('\n')
    
    for line in lines:
        row_buttons = []
        buttons = line.split('|')
        
        for button in buttons:
            text, link = map(str.strip, button.split('-'))
            
            if link == "{random}":
                row_buttons.append(InlineKeyboardButton(text=text, callback_data="random"))
            else:
                row_buttons.append(InlineKeyboardButton(text=text, url=link))
        
        if row_buttons:
            keyboard.append(row_buttons)
    
    return keyboard


async def mailing_menu():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            # [
            #     InlineKeyboardButton(
            #         text='–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏', 
            #         callback_data=ActionCallback(
            #             action='Action_mailing_add_keyboard'
            #         ).pack()
            #     ),
            # ],
            [
                InlineKeyboardButton(
                    text='‚ö´ –û—Ç–º–µ–Ω–∏—Ç—å', 
                    callback_data=ActionCallback(
                        action='admin_menu'
                    ).pack()
                ),
                InlineKeyboardButton(
                    text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚û°Ô∏è', 
                    callback_data=ActionCallback(
                        action='mailing_add_keyboard'
                    ).pack()
                )
            ]
        ]
    )


async def back_in_mailing():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                    callback_data=ActionCallback(
                        action="mailing"
                    ).pack()
                ),
            ],
        ]
    )


async def mailing_next(keyboard: List[List[InlineKeyboardButton]]):
    if not keyboard:
        keyboard = []

    return InlineKeyboardMarkup(
        inline_keyboard=[
            *keyboard,
            [
                InlineKeyboardButton(
                    text="‚ÜóÔ∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å",
                    callback_data=ActionCallback(
                        action="admin_mailing_done"
                    ).pack(),
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                    callback_data=ActionCallback(
                        action="mailing"
                    ).pack()
                )
            ]
        ]
    )


async def mailing_progress():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="–ó–∞–≤–µ—Ä—à–∏—Ç—å",
                    callback_data=ActionCallback(
                        action="admin_mailing_complete"
                    ).pack()
                ),
            ]
        ]
    )


async def progress_stop():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                    callback_data=ActionCallback(
                        action="admin_mailing"
                    ).pack()
                ),
                InlineKeyboardButton(
                    text="–ó–∞–≤–µ—Ä—à–∏—Ç—å",
                    callback_data=ActionCallback(
                        action="admin_mailing_complete"
                    ).pack()
                ),
            ]
        ]
    ) 


async def progress_complete():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é —Ä–∞—Å—Å—ã–ª–∫–∏",
                    callback_data=ActionCallback(
                        action="mailing"
                    ).pack()
                ),
            ],
        ]
    )


async def send_mailing_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                    callback_data=ActionCallback(
                        action="mailing"
                    ).pack()
                ),
                InlineKeyboardButton(
                    text="‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
                    callback_data=ActionCallback(
                        action="mailing_next"
                    ).pack()
                )
            ]
        ]
    )


async def mailing_create_keyboard_retry():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üîÑÔ∏èÔ∏è –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", 
                    callback_data=ActionCallback(
                        action="admin_mailing_add_keyboard"
                    ).pack()
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", 
                    callback_data=ActionCallback(
                        action="mailing"
                    ).pack()
                ),
                InlineKeyboardButton(
                    text="üè† –ú–µ–Ω—é", 
                    callback_data=ActionCallback(
                        action="menu"
                    ).pack()
                )

            ]
        ]
    )


async def mailing_free_or_all():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É",
                    callback_data=ActionDataCallback(
                        action="mailing_next",
                        data="all"
                    ).pack()
                ),
            ],
            [
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                    callback_data=ActionCallback(
                        action="admin_mailing_add_keyboard"
                    ).pack()
                )
            ]
        ]
    )
